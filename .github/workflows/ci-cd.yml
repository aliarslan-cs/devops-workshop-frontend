# This is a basic workflow to test if the image builds for each new PR 

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  pull_request_review_comment:
    types: [created, deleted]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # sets the environment variables
    env:
      DOCKERHUB_ORGANISATION: ${{ 'aliarsal' }}
      DOCKERHUB_REPOSITORY: ${{ 'workshop-project-frontend' }}
      IS_CD: ${{ !contains(github.event_name, 'push') }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command to show event name
      - name: Run a one-line script
        run: echo Halo ${{ github.event_name }}!

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.26.0
        id: generate_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          DEFAULT_BUMP: "patch"

      - name: Generate Vars
        id: generate_vars
        run: |
          IMAGE_TAG=${{ steps.generate_version.outputs.new_tag }}
          IMAGE_NAME=${{ format('{0}/{1}', env.DOCKERHUB_ORGANISATION, env.DOCKERHUB_REPOSITORY) }}:$IMAGE_TAG
          echo "Image: $IMAGE_NAME"
          echo "::set-output name=image_name::$IMAGE_NAME"
          echo IMAGE=$(echo "$IMAGE_NAME") >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Echo Output
        run: |
          echo "Image from Output: ${{ steps.generate_vars.outputs.image_name }}"
          echo "Image from Env:  ${{ env.IMAGE }}"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: ${{ !contains(github.event_name, 'push') }}
          build-args: BUILD_PARAMETERS=${{ env.BUILD_PARAMETERS }}
          cache-to: type=inline
          tags: ${{ env.IMAGE }}

      - name: Push tag
        if: "$env.IS_CD"
        uses: anothrNick/github-tag-action@1.34.0
        env: ${{ !contains(github.event_name, 'push') }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: "patch"
